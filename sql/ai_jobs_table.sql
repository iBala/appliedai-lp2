-- Create the ai_jobs table with foreign key to ai_companies
CREATE TABLE IF NOT EXISTS ai_jobs (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
  updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
  role_name TEXT NOT NULL,
  status TEXT NOT NULL CHECK (status IN ('open', 'closed')),
  description TEXT,
  company_id BIGINT NOT NULL REFERENCES ai_companies(id) ON DELETE CASCADE,
  location TEXT,
  role_type TEXT,
  
  -- Add index on company_id for faster lookups
  CONSTRAINT fk_company FOREIGN KEY (company_id) REFERENCES ai_companies(id)
);

-- Create index for better query performance
CREATE INDEX IF NOT EXISTS idx_jobs_company_id ON ai_jobs(company_id);
CREATE INDEX IF NOT EXISTS idx_jobs_status ON ai_jobs(status);

-- Add a trigger to update the updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
   NEW.updated_at = now();
   RETURN NEW;
END;
$$ language 'plpgsql';

-- Drop trigger if it exists to avoid errors on re-running
DROP TRIGGER IF EXISTS update_ai_jobs_updated_at ON ai_jobs;

CREATE TRIGGER update_ai_jobs_updated_at
BEFORE UPDATE ON ai_jobs
FOR EACH ROW
EXECUTE FUNCTION update_updated_at_column(); 